@charset "utf-8";
/*
usage:
$ vivliostyle preview --theme screen.css example/sample.md
$ vivliostyle build --theme screen.css -o webpub/ -f webpub example/sample.md
*/
@import "base.css";

@media screen {
    :root {
        --column-width: 23em;
        column-width: var(--column-width);
        column-gap: 4em;
        column-fill: auto;

        block-size: 95vh;

        --serif-font-family: serif;
        --serif-font-family-en: serif;
        --sans-serif-font-family: sans-serif;
        --sans-serif-font-family-en: sans-serif;

        font-size: inherit;

        --color-ref: royalblue;
    }

    body::before {
        content: "凡例:\A'#id'のidは要素のid。h1など見出しにidが明示的に設定されていない場合、VFMは見出しのテキストからidを生成する。imgなどの要素では、この方法ではidは表示されない。\A段抜きの図はカーソルを上にかざすと大きくなる。";
        white-space: pre-wrap;
        display: block;
        margin-block-end: 1em;
        border-block-end: thin solid var(--color-ref);
        color: var(--color-ref);
    }

    header {
        margin-block-end: 1em;
        padding-inline: 0;
    }
    h1,
    h2.title:lang(en) {
        font-size: 120%;
        text-align: left;
    }
    h1 {
        margin-block-start: 0;
        margin-block-end: 1em;
        line-height: 1.5em;
    }

    h2.title:lang(en),
    :has(> .author) {
        margin-block: 1em;
        line-height: 1.5em;
    }
    :has(> .author) > p {
        display: block;
        margin-inline: 0;
        text-indent: 0;
        text-align: start;
        font-size: 100%;
    }
    :has(> .author) > p:not(:first-of-type) {
        margin-inline-start: unset;
    }
    .paffiliate, .affiliate, .email,
    .paffiliate::before, .affiliate::before, .email::before {
        font-size: 100%;
        line-height: 1.5;
    }

    section:has(> h2.abstract), section:has(> h2.keyword),
    section:has(> h2.abstract:lang(en)),
    h2.abstract,
    h2.keyword {
        margin-block: 1em;
        font-size: 100%;
    }
    h2.abstract:lang(en),
    h2.keyword:lang(en) {
        font-style: normal;
    }
    .equation.number {
        grid-template-columns: 3rem auto 3rem;
    }
    .equation.number::before,
    [id]::after {
        content: "#" attr(id);
        margin-inline-start: .5em;
        color: var(--color-ref);
        font-size: .8em;
        letter-spacing: normal;
    }
    .mjx-chtml [id]::after,
    .MJX_Assistive_MathML [id]::after,
    [data-math-typeset] [id]::after {
        content: "";
    }

    .paffiref::before {
        content: "[paffiref " attr(href) "]";
        color: var(--color-ref);
    }
    .affiref::before {
        content: "[affiref " attr(href) "]";
        color: var(--color-ref);
    }
    .emailref::before {
        content: "[email " attr(href) "]";
        color: var(--color-ref);
    }
    .cite:before {
        content: "[cite " attr(href) "]";
        color: var(--color-ref);
    }
    .tabref:before {
        content: "[tabref " attr(href) "]";
        color: var(--color-ref);
    }
    .figref:before {
        content: "[figref " attr(href) "]";
        color: var(--color-ref);
    }
    .figref.first-ref::before,
    .tabref.first-ref::before {
        color: var(--color-ref);
    }
    .fn-call:before {
        content: "[fn-call " attr(href) "]";
        color: var(--color-ref);
    }
    .secref:before {
        content: "[secref " attr(href) "]";
        color: var(--color-ref);
    }

    h1, h2, h3, h4, h5, h6 {
        break-after: avoid;
        font-size: inherit;
    }

    figure {
        margin-block: var(--spacing-block);
        margin-inline: 0;
    }
    figcaption {
        margin-inline: 0;
        font-size: .9em;
        text-align: left;
    }
    figure.fig > figcaption {
        break-before: avoid;
    }
    figure.table > figcaption {
        break-after: avoid;
    }

    /* figure:has(img:hover),
    figure:has(> img):has(img:hover), */
    figure.col-span-2:has(img:hover),
    figure:has(> img.col-span-2):has(img:hover) {
        /* imgが隣の段の上に表示されるようにする */
        position: relative;
    }
    /* figure img:hover,
    figure:has(> img) img:hover {
        position: absolute;
        top: 0;
        max-inline-size: var(--column-width);
        width: unset;
        background-color: white;
        z-index: 999;
    } */
    figure.col-span-2 img:hover,
    figure:has(> img.col-span-2) img:hover {
        max-inline-size: calc(var(--column-width) * 2);
        width: unset;
        background-color: white;
        z-index: 999;
        /*
        */
    }

    img {
        max-inline-size: 10lh;
    }
    .fn-area {
        float: unset;
        margin-block: 1em;
        border-block: thin solid currentcolor;
    }
}

/* ***
End of script
*** */